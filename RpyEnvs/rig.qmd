---
title: "Managing R versions"
format: html
editor: visual
---

## Issue

I've update to R 4.2, but have projects that were built with 3.x. Some new versions of packages for R 4.x don't work in 3.x, so I would need to update packages, but I know doing that will break things, and I don't have time to do a full update of the project.

I use `renv` to manage the packages, but not currently anything to switch/manage R versions itself. In python, there's `pyenv` to manage python versions. I've run across `rig` (<https://github.com/r-lib/rig>).

## Install

click on windows installer. Restart terminal. Type `rig list` to see what R is available.

## Using it

Go to the project I want to run, and figure out what version of R it was using. Interesting- it says 4.0.2 so maybe I didn't need to worry about this? Whoops. Still interesting, I guess. And, just to avoid any issues, I still think I might downgrade to that to run the project because I really just need things to work.

So, try `rig add 4.0.2`. Seems to have worked. Set the default to current, though.

`rig default 4.2.1`.

### Choosing for a project

What if I just open the project file by double clicking? There's no obvious way to change the R version just by opening Rstudio- it uses the default.

I think there's probably a way to use the CLI to change the R version and then double click, but what seems to be easiest is `cd path/to/repo` and then `rig rstudio renv.lock` to open with the version in the lockfile.

And do I keep using other R versions elsewhere? Seem to. For now, this should do what I need.

## Installing rtools

We need rtools to install packages with compiled components. R 4.2 has updated to Rtools 42 (from 40), and so using previous versions of R need older Rtools. The telltale is when trying to install a package, we get errors about 'make' not being found. The rig documents imply that `rig system update-rtools40` should work, but I get "Error: the system cannot find the path specified". I'm not sure what path that is, so hard to fix. So, I seem to be OK until I need something that needs 'make', and then I'm out of luck.

### The solution

To install Rtools40, needed for R 4.0- 4.1, run `rig add rtools40`. Seems to be all it took, now I can compile. I assume there's a similar command for even older Rtools if need to downgrade to R 3.x, but haven't tried.
